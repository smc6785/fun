Linux
---
less/more + file  viewing files
tail/head + file to see the first/end couple of lines


Arduino
---
check if the port is in use
lsof | grep usbserial
If the port is in use, you will get a response like this (otherwise it will return nothing):
screen    27127 Sefi    5u     CHR               18,0        0t0       605 /dev/tty.usbserial
Note the session number. In my case, it's 27127. Then run:
screen -x 27127 (obviously use your session number from the grep) 
It will return you to your previous screen session. Then use ctr-A ctr-\ to close it properly (will ask you to confirm).


gcc/g++
---
-l link to the libraries that are in the default path
-L link to the libraries that are not in the default path

-I find the include header file

-o followed by the name of the output file

the default include path for gcc searches /usr/local/include
The default library path for gcc searches /usr/local/lib

#include<xxx.h> complior would find in system dir
#include"xxx.h" complior would find in user dir

CFLAGS 表示用于 C 编译器的选项，
CXXFLAGS 表示用于 C++ 编译器的选项。

LIBS：告诉链接器要链接哪些库文件，如LIBS = -lpthread -liconv
CFLAGS： 指定头文件（.h文件）的路径，如：CFLAGS=-I/usr/include -I/path/include。同样地，安装一个包时会在安装路径下建立一个include目录


pkg-config首 先在prefix/lib/pkgconfig/中查找相关包（譬如opencv）对应的相应的文件（opencv.pc）。在linux上上述路径名为 /usr/lib/pkconfig/
pkg-config --libs --cflags opencv
gcc hello.c -o hello $(pkg-config allegro-5 allegro_font-5 allegro_image-5 allegro_primitives-5 --libs --cflags)

//gcc -o sample sample.c -I allegro5/include -L allegro5/lib -l allegro -lallegro_main


tmux
---
1.% split windows left and right
2.x close current window
3.; switch between windows
4.o switch to last window
5.use the arrow key to switch between windows
6.z maximize the current window
7.c create a new window
8.& close current window
9., rename the window
10.w show all the windows
11.tmux new -s name create a new session named name
12.tmux ls
13.tmux a recover last session
14.tmux a -t name
15.tmux kill-session -t name
16.tmux kill-server
17.$ rename the session
18.s show all the sessions
19.d detach current session


vim
----
1.:q quit
  :wq save and quit
  :q! quit without saving

2.dd delete a line put number before detele certain amount of lines
	D delete until the end
  gg go to top
  G go to the bottom

3.j up
  k down
  l left
  h right
  } next blocks of code
  { previous blocks of code
4.undo u
  redo control+ R

5.copy   yy
  paste  p below
  		 P above

6. visual mode v selct mutiple lines by using jklh
	V select whole line 

7. add a line and insert mode     o blew O above

8.next word w
  previous word b

9.:+number to number line

10.% {        }

11.cw change a word

12.dw delete a word

13.dt delete until 

14.* find all the reference 

15.centor your cursor zz

26.zz move the page with current line being in the middle

27.zb move the page with current line being the last line

28.yw copy a single word

29.c$ delete all until the end of this line

30.~ Capitalize letters

31.A insert at the end of a line

32.r to replace one signle letter

33.A to insert at the end of a line

34.I to insert in the begining of a line

35.s delete a character and insert

36.S delete a line and insert

37.e jump to the end of a word

38.dap delete a paragraph

39.dab delete a bracket

40.daw delete a word

41.uses < and > to tab mulitple lines

42. H M L use for high mid and low of the screen

43. replace or delete text
	:s/foo/bar/ replace first foo with bar
	:%s/foo/bar/g replace all the foo with bar
		without g, its gonna only affect the first occurence
	:s/foo// delete all foo

44. comment lines
	:5,20s/^/#/
	add # before the line from 5 to 20

45. control + n/p for auto complete

46. !ls to run bash command

47. 0 to the start of a line 

48. ^ start of a line

49. :100,111s/^/hello/

50. q + a make a recording, q again to end
    and (number )@ + a do the recording x nmber of times

51. norm Icall("
    add in the start

52. gx 
===
grep is an acronym that stands for global regular expression print
grep 'string to match' 'file name'

- to search multiple files, grep 'string to match' 'file name 1' 'file name 2'
- search all files in the current directory, grep 'string to match' *
- grep commands are case sensitive use -i to ignore case in grep seaches
- to include all subdirectories in a search, add the -r operator to the grep command
- to list names of matching files, use -l
